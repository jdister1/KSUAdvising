@model KSUAdvising.Models.AdministrativeAssistantViewModel
@using Newtonsoft.Json
@{
    ViewBag.Title = "Index";
}
@section Scripts {
    <script type="text/JavaScript">
        //getting the autogenerated hub proxy
        var alertHubProx = $.connection.alertHub;

        $(document).ready(function () {

            //starts connection
            $.connection.hub.start();

            //ataches an event handler for advisers in and out of walkin queue
            alertHubProx.client.addAdviserInQueue = function (name, message) {
                $.jGrowl(name + " " + message, { life: 2500, theme: 'walkinAvailibility' });
                addAdviserQueue(name);
            };
            alertHubProx.client.removeAdviserFromQueue = function (name, message) {
                $.jGrowl(name + " " + message, { life: 2500, theme: 'walkinAvailibility' });
                removeAdviserQueue(name);
            };

            //attaches event handlers for advisers in and out of walkin queue FROM ADMINISTRATOR
            alertHubProx.client.forceAddAdviserInQueue= function (name, message) {
                $.jGrowl(name + " " + message, { life: 2500, theme: 'walkinAvailibility' });
                addAdviserQueue(name);
            };

            alertHubProx.client.forceRemoveAdviserFromQueue = function(name, message){
                $.jGrowl(name + " " + message, { life: 2500, theme: 'walkinAvailibility' });
                removeAdviserQueue(name);
            }

            //attaches an event handler for students in,out, and returned towalkin queue
            alertHubProx.client.addStudentInQueue = function (name, message) {
                $.jGrowl(name + " " + message, { life: 2500, theme: 'walkinAvailibility' });
                addStudentToQueue(name);
            };
            alertHubProx.client.returnStudentToQueue = function(name, message){
                $.jGrowl(name + " " + message, { life: 2500, theme: 'walkinAvailibility' });
                addStudentToQueue(name);
            }
            alertHubProx.client.removeStudentFromQueue = function (studentFlashlineID,adviserFlashlineID, message) {
                $.jGrowl(studentFlashlineID + " " + message, { life: 2500, theme: 'walkinAvailibility' });
                removeStudentQueue(studentFlashlineID);
            }

            //puts advising data in table
            var todaysAppointments = @Html.Raw(JsonConvert.SerializeObject(Model.appointmentData));

            for(var i = 0; i < todaysAppointments.length; ++i)
            {
                var rowText = "<tr><td>" + todaysAppointments[i].AdvisorFlashlineID + "</td><td>"+todaysAppointments[i].AdvisorFirstName + "</td><td>" + todaysAppointments[i].AdvisorLastName + "</td><td>" +todaysAppointments[i].StudentFlashlineID + "</td><td>" + todaysAppointments[i].StudentFirstName + "</td><td>" + todaysAppointments[i].StudentLastName+ "</td><td>" + todaysAppointments[i].AppointmentStartTime+ "</td><td>" + todaysAppointments[i].AppointmentEndTime + "</td></tr>";
                $("#appointmentTable tbody").append(rowText);
            }
            $('#appointmentTable').dataTable();
            
            //seeds existing walkin users
            var existingWalkin = @Html.Raw(JsonConvert.SerializeObject(Model.currentWalkinQueueFlashline));
            for(var i = 0; i < existingWalkin.length; ++i)
            {
                //check if already loaded in DOM
                if(!$("#li_" + existingWalkin[i]).length)
                {
                    addStudentToQueue(existingWalkin[i]);
                }
            }

            //seeds existing walkin advisers
            var existingAdviser = @Html.Raw(JsonConvert.SerializeObject(Model.currentAdviserWalkinQueueFlashline));
            for(var i = 0; i < existingAdviser.length; ++i)
            {
                //check if already loaded in DOM
                if(!$("#li_" + existingAdviser[i]).length){
                    addAdviserQueue(existingAdviser[i]);
                }
            }

            //show Home by Default
            showPanel(1);

            //attaching event handlers to top buttons to show/hide correct panels
            //$("#home_button").click(function () {
            //    switchLayout(0);
            //});

            $("#appointment_button").click(function () {
                switchLayout(1);
            });

            $("#student_queue_button").click(function () {
                switchLayout(2);
            });

            $("#adviser_queue_button").click(function () {
                switchLayout(3);
            });
        });


        //************************************************************************
        //CODE FOR UPDATING THE LAYOUT
        function switchLayout(buttonID) {
            switch (buttonID) {
                case 0:
                    showPanel(0);
                    break;
                case 1:
                    showPanel(1);
                    break;
                case 2:
                    showPanel(2);
                    break;
                case 3:
                    showPanel(3);
                    break;
                default:
                    //nothing
            }
        }

        function showPanel(panel) {
            //based on what integer is passed hide other panels and show correct one
            var panels = ["#home_panel", "#appointment_schedule", "#walkin_student_queue", "#walkin_adviser_queue"];
            var buttons = ["#home_button i", "#appointment_button i", "#student_queue_button i","#adviser_queue_button i"];
            for (var i = 1; i < 4; ++i) {
                if (panel != i) {
                    $(panels[i]).css("display", "none");
                    $(buttons[i]).removeClass("iconActive");
                }
                else {
                    $(panels[i]).css("display", "block");
                    $(buttons[i]).addClass("iconActive");
                }
            }
        }

        //************************************************************************


        //************************************************************************
        //CODE FOR UPDATING THE QUEUES APPROPRIATELY
        function addAdviserQueue(name) {
            var liText = "<li class='accordion-navigation' id='li_"+name+"'><a href=''>"+name+"</a></li>";
            $("#walkin_adviser_queue_ul").append(liText);
        }

        function removeAdviserQueue(name) {
            $("#li_" + name).remove();
        }

        function addStudentToQueue(name) {
            var liText = "<li class='accordion-navigation' id='li_" + name + "'><a href=''>" + name + "</a></li>";
            $("#walkin_student_queue_ul").append(liText);
        }

        function removeStudentQueue(name) {
            $("#li_" + name).remove();
        }
        //************************************************************************

    </script>
}
<style>
     #logout_button{
        background-color:#9e2345 !important;
    }
</style>
<div id="navbar" class="icon-bar three-up">

    @*<a id="home_button" class="item">
        <i class="fi-home iconActive"></i>
    </a>*@
    <a id="appointment_button" class="item">
        <i class="fi-calendar iconActive"></i>
    </a>
    <a id="student_queue_button" class="item">
        <i class="fi-torsos"></i>
    </a>
    <a id="adviser_queue_button" class="item">
        <i class="fi-torso-business"></i>
    </a>
</div>

<div class="row">
    
    @*<div id="home_panel" class="small-11 small-centered columns">
        Home with settings
    </div>*@

    <div id="appointment_schedule" style="display:none;" class="medium-12 columns">
        <table id="appointmentTable" class="display" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th>Adviser ID</th>
                    <th>Adviser First Name</th>
                    <th>Adviser Last Name</th>
                    <th>Student ID</th>
                    <th>Student First Name</th>
                    <th>Student Last Name</th>
                    <th>Appointment Start</th>
                    <th>Appointment End</th>
                </tr>
            </thead>
            <tbody>
           </tbody>
       </table>

        <br/><br/>
        <a id="logout_button" href='@Url.Action("Index","Login")' class="button alert"><span class="show-for-medium-up">Logout</span> <i class="fi-power"></i></a>
</div>

    <div id="walkin_student_queue" style="display:none;" class="small-11 small-centered columns">
        <dl class="sub-nav">
            <dt>Filter:</dt>
            <dd class="active"><a href="#">All</a></dd>
            <dd><a href="#">Senior</a></dd>
            <dd><a href="#">International</a></dd>
        </dl>
        <ul id="walkin_student_queue_ul" class="accordion" data-accordion></ul>
    </div>

    <div id="walkin_adviser_queue" style="display:none;" class="small-11 small-centered columns">

        <ul id="walkin_adviser_queue_ul" class="accordion" data-accordion>
        </ul>
    </div>

</div>